import{ThemeManager}from"./modules/theme.js";import{PerformanceManager}from"./modules/performance.js";import{NavigationManager}from"./modules/navigation.js";import{waitForDOM,dispatchCustomEvent}from"./modules/utils.js";class App{constructor(){this.modules=new Map,this.initialized=!1,this.version="2.0.0",this.initImmediate()}initImmediate(){try{this.modules.set("theme",new ThemeManager),console.log("🎨 Theme manager initialized")}catch(e){console.error("Failed to initialize theme manager:",e)}}async init(){if(this.initialized){console.warn("App already initialized");return}try{console.log(`🚀 Initializing App v${this.version}`),await waitForDOM(),await this.initializeModules(),this.setupGlobalEvents(),this.initialized=!0,dispatchCustomEvent("app:ready",{version:this.version}),console.log("✅ App initialization complete")}catch(e){console.error("❌ App initialization failed:",e),this.handleInitializationError(e)}}async initializeModules(){const e=[{name:"performance",class:PerformanceManager,critical:!0},{name:"navigation",class:NavigationManager,critical:!0}];for(const{name:t,class:n,critical:s}of e)try{console.log(`🔧 Initializing ${t} module...`);const e=new n;this.modules.set(t,e),console.log(`✅ ${t} module initialized`)}catch(e){if(console.error(`❌ Failed to initialize ${t} module:`,e),s)throw new Error(`Critical module ${t} failed to initialize`)}}setupGlobalEvents(){document.addEventListener("visibilitychange",this.handleVisibilityChange.bind(this)),window.addEventListener("online",this.handleOnline.bind(this)),window.addEventListener("offline",this.handleOffline.bind(this)),window.addEventListener("error",this.handleGlobalError.bind(this)),window.addEventListener("unhandledrejection",this.handleUnhandledRejection.bind(this)),window.addEventListener("beforeunload",this.handleBeforeUnload.bind(this)),window.addEventListener("load",this.handlePageLoad.bind(this))}handleVisibilityChange(){document.hidden?(console.log("📱 Page hidden"),dispatchCustomEvent("app:hidden")):(console.log("👁️ Page visible"),dispatchCustomEvent("app:visible"))}handleOnline(){console.log("🌐 Connection restored"),dispatchCustomEvent("app:online"),document.documentElement.classList.remove("offline"),document.documentElement.classList.add("online")}handleOffline(){console.log("📡 Connection lost"),dispatchCustomEvent("app:offline"),document.documentElement.classList.remove("online"),document.documentElement.classList.add("offline")}handleGlobalError(e){console.error("Global error:",e.error),window.gtag&&gtag("event","exception",{description:e.error.message,fatal:!1})}handleUnhandledRejection(e){console.error("Unhandled promise rejection:",e.reason),window.gtag&&gtag("event","exception",{description:`Unhandled Promise: ${e.reason}`,fatal:!1})}handleBeforeUnload(){console.log("📤 Page unloading"),this.modules.forEach((e,t)=>{if(typeof e.cleanup=="function")try{e.cleanup()}catch(e){console.error(`Error cleaning up ${t} module:`,e)}}),dispatchCustomEvent("app:beforeunload")}handlePageLoad(){console.log("🎯 Page load complete"),document.documentElement.classList.add("page-loaded"),dispatchCustomEvent("app:loaded");const e=this.getModule("performance")}handleInitializationError(){console.error("Application failed to initialize properly"),this.initializeDegradedMode()}initializeDegradedMode(){if(console.log("🔄 Initializing in degraded mode"),document.documentElement.classList.add("degraded-mode"),!this.modules.has("theme"))try{this.modules.set("theme",new ThemeManager)}catch(e){console.error("Even theme failed in degraded mode:",e)}}getModule(e){return this.modules.get(e)||null}hasModule(e){return this.modules.has(e)}getVersion(){return this.version}isInitialized(){return this.initialized}reload(){console.log("🔄 Reloading application"),window.location.reload()}debug(){return{version:this.version,initialized:this.initialized,modules:Array.from(this.modules.keys()),userAgent:navigator.userAgent,url:window.location.href,timestamp:(new Date).toISOString()}}}const app=new App;window.app=app,app.init().catch(e=>{console.error("Critical app initialization failure:",e)});export default app